<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Flexbox</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;400;600&family=Share+Tech+Mono&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" type="text/css" href="style.css" />
  </head>
  <body>
    <div class="header-background">
      <header>
        <div class="container-hero-left">
          <img
            class="hero-img"
            src="assets/img/01_hero\png/hero-left.png"
            alt=""
          />
        </div>
        <div class="container-h1">
          <h1>Flexbox</h1>
          <nav>
            <a href="#start-flexbox">anlegen</a>
            <a href="#align-element">ausrichten</a>
            <a href="#reverse-axis">umkehren</a>
          </nav>
        </div>
        <div class="container-hero-right">
          <img
            class="hero-img"
            src="assets/img/01_hero\png/hero-right.png"
            alt=""
          />
        </div>
      </header>
    </div>
    <hr />

    <div class="section-background">
      <section id="start-flexbox">
        <div class="container-imgs-with-expl">
          <div class="img-with-expl">
            <img src="assets/img/02_start_flexbox/1.png" alt="" />
            <span>1. Kontainer ohne Flexbox</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/02_start_flexbox/2.png" alt="" />
            <span>2. Kontainer mit Flexbox</span>
          </div>
        </div>

        <div class="text-box">
          <h2>Flexbox anlegen</h2>
          <p>
            Der erste Kontainer ist keine Flexbox. Standardmäßig sind die
            Elemente unserer Website untereinander angeordnet.
          </p>
          <p>Der zweite Kontainer ist eine Flexbox.</p>
          <p>
            Der zweite Kontainer enthält die Eigenschaft "display" mit dem Wert
            "flex".
          </p>
          <div class="frame">
            <p>.container-yellow {</p>
            <p>display: flex;</p>
            <p>}</p>
          </div>
          <p>
            Durch "display: flex;" verwandelt sich der entsprechende Kontainer
            in eine Flexbox. Dadurch werden die Elemente darin standardmäßig
            horizontal angeordnet.
          </p>
        </div>
      </section>
    </div>
    <hr />

    <div class="section-background">
      <section id="align-element">
        <div class="container-imgs-with-expl">
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/2.png" alt="" />
            <span>justify-content: flex-start;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/flex-end.png" alt="" />
            <span>justify-content: flex-end;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/4.png" alt="" />
            <span>justify-content: center;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/3.png" alt="" />
            <span>justify-content: space-between;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/5.png" alt="" />
            <span>justify-content: space-around;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/6.png" alt="" />
            <span>justify-content: space-evenly;</span>
          </div>
          <div class="img-with-expl">
            <img
              src="assets/img/03_align_element/align-items flex-end.png"
              alt=""
            />
            <span>align-items: flex-end;</span>
          </div>
          <div class="img-with-expl">
            <img src="assets/img/03_align_element/7.png" alt="" />
            <span>justify-content: center;</span>
            <span>align-items: center;</span>
          </div>
        </div>
        <div class="text-box">
          <h2>Elemente an den Achsen ausrichten</h2>
          <p>
            Mit der Eigenschaft <b>justify-content</b> richten wir Elemente an
            der x-Achse aus.
          </p>

          <p>Mit <b>align-items</b> richten wir Elemente an der y-Achse aus.</p>

          <p>
            Beiden Eigenschaften können viele verschiedene Werte zugeordnet
            werden. Die wichtigsten sind:
          </p>

          <div class="frame">
            <p>.container-yellow {</p>
            <p>display: flex;</p>
            <p>}</p>
          </div>
          <br />

          <h3>flex-start</h3>
          <p>
            Die Elemente befinden sich am 0-Punkt unserer Koordinatensystems.<br />
            Dieser Wert ist der Standardwert einer Flexbox. Wenn wir der Flexbox
            also keine Werte zuweisen, ist sie trotzdem auf „flex-start“
            voreingestellt.
          </p>

          <h3>flex-end</h3>
          <p>Die Elemente befinden sich am Ende der Achse.</p>

          <h3>center</h3>
          <p>Die Elemente in dem Eltern-Kontainer werden zentriert.</p>

          <h3>space-between</h3>
          <p>
            Der Abstand zwischen den Elementen ist maximal groß. Das linke
            Element hat keinen Abstand nach links. Das rechte Element hat keinen
            Abstand nach rechts.
          </p>

          <h3>space-around</h3>
          <p>
            Alle Elemente haben den gleichen Außenabstand. <br />
            Vorsicht! Das führt dazu, dass der Abstand zum Rand des
            Eltern-Kontainers nur halb so groß ist, wie der zwischen den
            Elementen. Zur Verdeutlichung siehe Bild XY.
          </p>

          <h3>space-evenly</h3>
          <p>
            Der Abstand zwischen Eltern-Kontainer und zwischen den Elementen ist
            gleich.
          </p>

          <p>
            Selbstverständlich können justify-content und align-items auch
            zusammen angewendet werden.<br />
            Siehe Beispiele.
          </p>
        </div>
      </section>
    </div>
    <hr />

    <div class="section-background">
      <section id="reverse-axis">
        <div>
          <div class="img-with-expl">
            <img src="" alt="Bild" />
            <span>Text</span>
          </div>
        </div>

        <div class="text-box">
          <h2>Vertikale Anordnung</h2>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Laudantium
          laborum numquam sit, blanditiis dolorum aperiam quam voluptates
          recusandae sapiente perferendis cum officia reiciendis laboriosam,
          iste consequuntur quisquam qui ipsum et!
        </div>
      </section>
    </div>
    <hr />

    <footer></footer>
  </body>
</html>

/* general style */ html { font-family: "Montserrat", sans-serif; font-size:
12px; font-weight: 400; scroll-behavior: smooth; } body { margin: 0; display:
flex; flex-direction: column; align-items: center; } h1 { font-size: max(11vw,
12px); margin-block-start: 0; margin-block-end: 0; margin-left: 16px;
margin-right: 16px; } h2 { font-size: max(4vw, 12px); font-family: "Share Tech
Mono"; margin-block-start: 0; margin-block-end: 0; } h3 { margin-block-start: 0;
margin-block-end: 0; } p { color: black; } span { color: black; font-size: 12px;
/* border: 1px solid #000000; */ margin-top: 2px; font-weight: 700; } a { /*
border: 1px solid black; */ text-decoration: none; color: black; /*
background-color: #a3bf49; */ padding: 5px; font-weight: 700; font-size:
max(2vw, 12px); } a:hover { text-shadow: 0px 10px #a3bf49; } hr { border-color:
#000000; border-width: minimum; } /* header */ .header-background {
background-color: #d6d58e; width: 100%; display: flex; justify-content: center;
} header { display: flex; align-items: center; justify-content: space-between;
padding: 32px; background-color: #d6d58e; height: 50vh; max-width: 1920px; }
.container-hero-left { display: flex; align-items: flex-end; /* width: 60%; */
height: 100%; } .container-h1 { display: flex; flex-direction: column;
align-items: center; justify-content: center; flex: 1; height: 100%; }
.container-hero-right { display: flex; align-items: flex-start; justify-content:
flex-end; /* width: 60%; */ height: 100%; } .hero-img { max-width: 100%; } nav {
display: flex; flex-wrap: wrap; align-items: center; justify-content:
space-evenly; gap: 8px; } /* section */ .section-background { background-color:
#a3bf49; width: 100%; display: flex; justify-content: center; } section {
display: flex; justify-content: space-between; padding: 2rem; background-color:
#a3bf49; max-width: 1920px; } .container-imgs-with-expl { display: flex;
flex-wrap: wrap; justify-content: space-between; max-width: 40%; }
.img-with-expl { display: flex; flex-direction: column; max-width: 48%;
min-width: 150px; margin: 0; margin-bottom: 16px; } .text-box { max-width: 60%;
margin-left: 16px; } .frame { /* border: 1px solid #000000; */ /* width:
fit-content; */ padding: 4px; background: rgba(255, 255, 255, 0.2); font-family:
"Share Tech Mono"; } .frame p { color: #005c53; } /* footer */ footer { height:
144px; background-color: #d6d5a2; } /* media */ /* @media (max-width: 1400px) {
h1 { font-size: max(5vw, 12px); } h2 { font-size: max(4vw, 12px); } a {
font-size: max(4vw, 12px); } } */ @media (max-width: 950px) { header {
flex-direction: column-reverse; height: 70%; } .container-hero-left { width:
100%; max-height: 25%; } .container-h1 { margin-top: 24px; margin-bottom: 40px;
} .container-hero-right { width: 100%; max-height: 25%; } .hero-img { max-width:
30%; } } @media (max-width: 814px) { .container-imgs-with-expl {
justify-content: center; } span { text-align: center; } } @media (max-width:
450px) { section { flex-direction: column-reverse; } .container-imgs-with-expl {
max-width: 100%; } .text-box { max-width: 100%; margin-left: 0; } }
