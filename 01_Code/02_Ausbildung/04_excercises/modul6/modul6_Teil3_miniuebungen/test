// let portion = +document.getElementById("input").value;
//   Zahl im Eingabefeld wird definiert und ausgelesen.

// for (let i = 0; i < fruits.length; i++) {
//   list8.innerHTML += `<li>${amounts[i]} ${ingredients[i]}</li>`;
// }

// let result = amount * portion;

// document.getElementById("amount1stIngredient").innerHTML = `${result}`;
//   Das Ergebnis wird in die Zelle mit der Id amount geladen.
// }

// Das Problem ist, dass der veränderte Ammount jetzt da steht und, bei einer weiterenn Eingabe, die Portion mit dem neuen Wert multipliziert wird.

// Die Werte in der Tabelle sollten unsichtbar immer gleich bleiben.

let startPortion = 4;
// let amounts = [1, 1, 200, 100, 4, 1, 1, 250, 2, 1, 1, 1];

// let ingredients = [
//   "Tortilla Wrap(s)",
//   "Salatgurke(n)",
//   "Paprika",
//   "Tomaten",
//   "Feta",
//   "Eisbergsalat",
//   "Mais",
//   "Joghurt",
//   "Mayo",
//   "Garam Masala",
//   "Rauchpaprika-Pulver",
//   "Salz und Pfeffer",
// ];

// function showTable() {
//   for (let i = 0; i < amounts.length; i++) {
//     table.innerHTML += `<tr><td>${amounts[i]}</td><td>${ingredients[i]}</td></tr>`;
//   }
// }

let ingredients = [
  [4, "a", "Tortilla Wrap(s)"],
  [1, "a", "Salatgurke(n)"],
  [1, "a", "Paprikaschote(n), rot"],
  [200, "g", "Cherrytomate(n)"],
  [100, "g", "Feta"],
  [1, "a", "Eisbergsalat"],
  [1, "kl Dose", "Mais"],
  [250, "g", "Joghurt"],
  [2, "EL", "Mayo"],
  [1, "EL", "Garam Masala"],
  [1, "TL", "Racuhpaprika-Pulver"],
  ["", "a", "Salz und Pfeffer"],
];
// So macht man Arrays in arrays.
// Wichtig ist, dass die Ansprache in der Funktion anders ist, als wenn man nur ein array hat.
// Mit dem erste [i] gibt man die Zeile an (so wie in einem eindimensionales array).
// Mit dem zweiten [i] gibt man das Element in der Zeile an.

function showTable() {
  // table.innerHTML = "";
  let inputPortion = document.getElementById("input").value;
  // Wir nehmen den Wert aus dem Input-Feld.

  for (let i = 0; i < ingredients.length; i++) {
    //let i = 0;  Die for-Schleife wird INITIALISIERT. Der erste Wert ist 0, also beginnt die for-Schleife bei der 0. Stelle und das ist das 1. Element des arrays. Beim ersten Durchgang hat die Schleife die Werte: 4, "a", "Tortilla Wrap(s)"
    // i < ingredients.length; ist die BEDINGUNG der for-Schleife. Sie sagt, dass die for-Schleife nur dann weitergehen soll, solange der Wert i (der für die Stelle im array steht) kleiner ist als die Länge des arrays.
    // i++ sorgt dafür, dass i bei jeder Itteration um eins erhöhrt wird.
    let result = (ingredients[i][0] * inputPortion) / startPortion;
    // Das Ergebnis wird definiert. Mit ingredients[i][0] greife ich auf mein Array zu. In der ersten Schleife hat die Variable i den Wert 0. Mit [0] greife ich auf die jeweils erste Stelle in inneren arrays.
    // inputPortion ist weiter oben definiert. Die Variable enthält den Wert des Inhalts des Input-Feldes.
    // mit / startPortion teilen wir noch durch 4.
    table.innerHTML += `<tr><td>${result}${" "}${ingredients[i][1]}</td><td>${
      ingredients[i][2]
    }</td></tr>`;
    // Mit table.innerHTML += füge ich bei jeder Itteration eine Tabellenzeile mit zwi Tabellenzellen hinzu.
    // 1. Zelle:
    // <td>${result} Hier wird das Ergebnis angezeigt (siehe Zeile 54). das Ergebnis aus Mengenangabe * Portionen.
    // ${" "} Hier wird ein Leerzeichen eingefügt.
    // ${ingredients[i][1]} Hier wird die zweite Stelle im i. Array angezeigt. Hier werden immer die Maßeinheiten angezeigt (g, ml etc.).
    // 2. Zelle:
    // ${ingredients[i][2]} Hier wird die dritte Stelle im i. Array angezeigt. Das sind die Zutaten.
  }
}
